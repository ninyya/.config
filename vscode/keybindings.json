// Place your key bindings in this file to override the defaults
[
    // Workbench controls
    { // Move from sidebar to editor
        "key": "ctrl+l",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "sideBarFocus"
    },
    { // Move from panel to editor
        "key": "ctrl+k",
        "command": "workbench.action.focusActiveEditorGroup",
        //"when": "terminalFocus || panelFocus"
        "when": "panelFocus"
    },
    { // Toggle bottom panel
        "key": "ctrl+shift+t",
        "command": "workbench.action.togglePanel"
    },
    { // View Explorer
        "key": "ctrl+e",
        "command": "workbench.view.explorer"
    },
    { // Go down in quickopen
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inFilesPicker && inQuickOpen"
    },
    { // Go up in quickopen
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inFilesPicker && inQuickOpen"
    },
    { // Go down in quickopen
        "key": "tab",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inFilesPicker && inQuickOpen"
    },
    { // Go up in quickopen
        "key": "shift+tab",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inFilesPicker && inQuickOpen"
    },

    // Explorer view
    // List Controls
    { // Go down in list
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    { // Go up in list
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    { // Select item in list
        "key": "l",
        "command": "list.select",
        "when": "!inputFocus"
    },
    { // Select item in list
        "key": "enter",
        "command": "list.select",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    { // Expand in list
        "key": "o",
        "command": "list.toggleExpand",
        "when": "!inputFocus"
    },
    { // Collapse item in list
        "key": "h",
        "command": "list.collapse",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    { // Delete file
        "key": "d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    { // Rename file
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    { // Copy file
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    { // Cut file
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    { // Paste file
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    { // Open to vertical split view
        "key": "v",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    { // Create new file
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    { // Create new folder
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && !inputFocus"
    },
    
    // Editor controls
    { //Go down in selection
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    { // Go up in selection
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    { //Go down in selection
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    { // Go up in selection
        "key": "shit+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    


    // {
    //     "key": "shift+;",
    //     "command": "insertPrevSuggestion",
    //     "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    // },
    
    
    // WhichKey
    { // Open WhichKey menu
        "key": "space",
        "command": "whichkey.show",
        "when": "editorTextFocus && neovim.mode != 'insert'"
    },

    //////////////
    // Remove defaults
    {
        "key": "ctrl+oem_3",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    { // Remove default binding
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    { // Remove default binding
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer",
    },
    { // Remove default binding
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+tab",
        "command": "-acceptAlternativeSelectedSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-vscode-neovim.ctrl-f",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "shift+delete",
        "command": "-deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },

]